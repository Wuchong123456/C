#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h"


void Reset(char board[list][line], int t, int e)//重置棋盘
{
	int a = 0;
	int b = 0;
	for (a = 0; a < t ; a++)
	{
		for (b = 0; b < e; b++)
		{
			board[a][b] = ' ';
		}
	}

}

void Print(char board[list][line], int t, int e)//打印棋盘
{	
	int b = 0;
	for (b = 0; b < t; b++)
	{
		int a = 0;
		for (a = 0; a < e; a++)
		{
			printf(" %c ", board[b][a]);
			if (a < e - 1)
			printf("|");
		}
		printf("\n");
		if (b < t - 1)
		{
			for (a = 0; a < e; a++)
			{
				printf("---");
				if (a< e-1)
				printf("|");
			}
			printf("\n");
		}
		
	}
}
Judge(char board[list][line],char* input, int t, int e)//判断是否平局
{
	int a = 0;
	int b = 0;
	int i = 0;
	for (a = 0; a < t; a++)
	{
		for (b = 0; b < e; b++)
		{

			if (board[a][b] != ' ')
				i++;

		}
	}
	if (i == t * e)
		*input = 'F';
}
Win(char board[list][line],int t,int e,char* input)//判断胜负
{
	int a = 0;
	int b = 0;
	for (a = 0; a < t; a++)
	{
		if (board[a][0] == board[a][1] && board[a][1] == board[a][2] && board[a][0] != ' ')
			*input = board[a][2];
	}
	for (a = 0; a < e; a++)
	{
		if (board[0][a] == board[1][a] && board[1][a] == board[2][a] && board[0][a] != ' ')
			*input = board[0][a];
	}
	if (board[0][0] == board[2][2] && board[2][2] == board[1][1] && board[1][1] != ' ')
		*input = board[1][1];
	if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[1][1] != ' ')
		*input = board[1][1];
	
}

 Systemplayergo(char board[list][line], int t, int e)//电脑和玩家玩
{
	 char input = 'A';
	 do{
		 int i = 1;
		 int x = 0;
		 int y = 0;
		 int m = 0;
		 int n = 0;	 
		
		 printf("电脑走:>\n");
		 Sleep(1500);
		 while (1)
		 {
			m = rand() % t;
			n = rand() % e;
			 if (board[m][n] == ' ')
			 {
				 board[m][n] = '#';
				 system("cls");
				 Print(board, list, line);
				 break;

			 }
				 

		 }
		 Win(board,t,e,&input);
		 Judge(board, &input, list, line);
		 if (input == '#')
		 {
			 printf("电脑获得胜利\n");
			 break;
		 }
		 if (input == 'F')
		 {
			 printf("平局\n");
			 break;
		 }
			
		 printf("玩家走:>\n");
		 for (; 1;)
		 {
			 printf("请输入要下的坐标:>");
			 scanf("%d%d", &x, &y);
			 if (x >= 1 && x <= t && y >= 1 && y <= e)
			 {

				 if (board[x - 1][y - 1] == ' ')
				 {
					 board[x - 1][y - 1] = '*';
					 system("cls");
					 Print(board, list, line);
					 break;
				 }
				 else
				 {
					 printf("该坐标被占用,请重新输入\n");
				 }
			 }
			 else
			 {
				 printf("该坐标错误，请重新输入\n");
			 }
		 }
		 Win(board, list, line, &input);
		 Judge(board, &input, list, line);
		 if (input == '*')
		 {
			 printf("玩家获得胜利\n");
			 break;
		 }
		 if (input == 'F')
		 {
			 printf("平局\n");
			 break;
		 }
	 } while (1);	
}

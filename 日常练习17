#include <stdio.h>
int cmp(const void*e1,const void*e2)
{
	return *(int*)e1 - *(int*)e2;
}
void swap(char*a, char*b, int w)
{
	int i = 0;
	for (i = 0; i < w; i++)
	{
		char cat = 0;
		cat = *a;
		*a = *b;
		*b = cat;
		a++;
		b++;
	}
}
void my_sort(void*base, int length, int width, int(*p)(void*e1, void*e2))
{
	int i = 0;
	for (i = 0; i < length - 1; i++)
	{
		int j = 0;
		for (j = 0; j < length - 1 - i; j++)
		{
			if (p((char*)base + j*width, (char*)base + (j+1)*width) > 0)
			{
				swap((char*)base + j*width, (char*)base + (j+1)*width, width);

			}
		}
		
	}

}
int main()
{
	int i = 0;
	int arr[10] = { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	my_sort(arr, sz, sizeof(arr[0]), cmp);
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}

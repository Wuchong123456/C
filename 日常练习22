#define  _CRT_SECURE_NO_WARNINGS 1
//#include <stdio.h>
//int find(int arr[3][3], int i, int j, int n)
//{
//	int a = 0;
//	int x = 0;
//	int y = 0;
//		while (n > arr[x][j - 1])
//		{
//			x++;
//			if (x >= i)
//				return 0;
//		}
//		y = j - 1;
//		while (n != arr[x][y])
//		{
//			y--;
//			if (y <0)
//				return 0;
//		}
//
//	printf("下标是%d %d",x,y);
//	return 1;
//}
//
//int main()
//{
//	int arr[3][3] = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } };
//	int n = 7;
//	int line = sizeof(arr[0]) / sizeof(arr[0][0]);
//	int list = sizeof(arr) / sizeof(arr[0]);
//	int trp = find(arr, line, list, n);
//	if (trp == 1)
//		printf("找到了\n");
//	else 
//		printf("找不到\n");
//	return 0;
//}
#include <string.h>
#include <stdio.h>
int is_left_move(char* str1, char* str2)//strcat与strncat的区别
{
	int len = strlen(str1);
	int len2 = strlen(str2);
	if (len != len2)
		return 0;
	strncat(str1, str1, 6);
	char* ret = strstr(str1, str2);//找子串
	if (ret == NULL)
	{
		return 0;
	}
	else
	{
		return 1;
	}
	 
}
int main()
{
	char arr1[30] = "abcdef";
	char arr2[] = "cdefb";
	int ret = is_left_move(arr1, arr2);
	if (ret == 1)
	{
		printf("yes\n");
	}
	else
	{
		printf("no\n");
	}
	return 0;
}
